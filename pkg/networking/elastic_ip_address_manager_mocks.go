// Code generated by MockGen. DO NOT EDIT.
// Source: sigs.k8s.io/aws-load-balancer-controller/pkg/networking (interfaces: ElasticIPAddressManager)

// Package networking is a generated GoMock package.
package networking

import (
	context "context"
	reflect "reflect"

	ec2 "github.com/aws/aws-sdk-go/service/ec2"
	gomock "github.com/golang/mock/gomock"
)

// MockElasticIPAddressManager is a mock of ElasticIPAddressManager interface.
type MockElasticIPAddressManager struct {
	ctrl     *gomock.Controller
	recorder *MockElasticIPAddressManagerMockRecorder
}

// MockElasticIPAddressManagerMockRecorder is the mock recorder for MockElasticIPAddressManager.
type MockElasticIPAddressManagerMockRecorder struct {
	mock *MockElasticIPAddressManager
}

// NewMockElasticIPAddressManager creates a new mock instance.
func NewMockElasticIPAddressManager(ctrl *gomock.Controller) *MockElasticIPAddressManager {
	mock := &MockElasticIPAddressManager{ctrl: ctrl}
	mock.recorder = &MockElasticIPAddressManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockElasticIPAddressManager) EXPECT() *MockElasticIPAddressManagerMockRecorder {
	return m.recorder
}

// FetchEIPInfosByRequest mocks base method.
func (m *MockElasticIPAddressManager) FetchEIPInfosByRequest(arg0 context.Context, arg1 *ec2.DescribeAddressesInput) (map[string]ElasticIPAddressInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchEIPInfosByRequest", arg0, arg1)
	ret0, _ := ret[0].(map[string]ElasticIPAddressInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchEIPInfosByRequest indicates an expected call of FetchEIPInfosByRequest.
func (mr *MockElasticIPAddressManagerMockRecorder) FetchEIPInfosByRequest(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchEIPInfosByRequest", reflect.TypeOf((*MockElasticIPAddressManager)(nil).FetchEIPInfosByRequest), arg0, arg1)
}
